services:
  backend:
    build: ./backend
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
    - ./frontend:/frontend
    command: npm start
    restart: always

  db:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  celery:
    build: ./backend
    env_file:
      - .env
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./backend:/backend
    depends_on:
      - backend
      - redis
    restart: always

  celery-beat:
    build: ./backend
    env_file:
      - .env
    command: >
      sh -c "python manage.py migrate &&
             sleep 5 &&
             celery -A backend beat --loglevel=info"
    volumes:
      - ./backend:/backend
    depends_on:
      - backend
      - redis
    restart: always

volumes:
  postgres_data:
